USE distribution
GO
/* 
* ********************************************************************************* 
* PURPOSE : Display Replication Topology 
* VERSION : 1.0.0.1 -- Revised to support multiple distribution database scenario as well 
* RUNS ON : The Distributor Server; against the Distribution Database 
* ********************************************************************************* 
* This script queries the Distribution Database (and optionally the Publisher 
* database, if the Distributor is also a Publisher) and draws out the replication 
* topology. It helps us understand the replication topology and displays 
* various other details that we need to understand the issue and thus helps us to 
* troubleshoot the issue faster. 
* ********************************************************************************* 
*/ 
SET nocount ON 

go 

IF ( (SELECT Count(*) 
      FROM   tempdb.sys.tables 
      WHERE  NAME = '##CE') > 0 ) 
  DROP TABLE ##ce 

go 

--CREATE TABLE ##CE ([DESCRIPTION] VARCHAR(100) NOT NULL, [VALUE] VARCHAR(100) NOT NULL) 
CREATE TABLE ##ce 
  ( 
     [description] VARCHAR(100), 
     [value]       VARCHAR(100) 
  ) 

go 

INSERT INTO ##ce 
VALUES     ('Continue', 
            1) 

go 

DECLARE @CONSOLEMSG VARCHAR(1000) 
DECLARE @SQLVersion VARCHAR(2) 

SET @SQLVersion = CONVERT(VARCHAR(2), Serverproperty('ProductVersion')) 

IF Substring(@SQLVersion, 2, 1) = '.' 
  SET @SQLVersion = Substring(@SQLVersion, 1, 1) 

IF CONVERT(INT, @SQLVersion) < 9 
  BEGIN 
      SET @CONSOLEMSG=CONVERT(VARCHAR(24), Getdate(), 121) 
                      + 
  ' SQL Server connected to is not SQL Server 2005 or SQL Server 2008. Exiting.' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      UPDATE ##ce 
      SET    [value] = 0 
      WHERE  [description] = 'Continue' 
  END 

go 

IF ( (SELECT [value] 
      FROM   ##ce 
      WHERE  [description] = 'Continue') = 1 ) 
  BEGIN 
      DECLARE @CONSOLEMSG VARCHAR(1000) 
      DECLARE @DistInst VARCHAR(1) 

      SELECT @DistInst = CONVERT(VARCHAR(1), Isnull([is_distributor], 0)) 
      FROM   [MASTER].[SYS].[servers] (nolock) 
      WHERE  [name] = 'REPL_DISTRIBUTOR' 
             AND [data_source] = CONVERT(SYSNAME, Serverproperty('ServerName')) 

      IF @DistInst IS NULL 
          OR @DistInst = '0' 
        BEGIN 
            SET @CONSOLEMSG=CONVERT(VARCHAR(24), Getdate(), 121) 
                            + 
            ' Selected instance is not a distributor instance. Exiting.' 

            RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

            UPDATE ##ce 
            SET    [value] = 0 
            WHERE  [description] = 'Continue' 
        END 
      ELSE 
        BEGIN 
            SET @CONSOLEMSG = Replace(CONVERT(VARCHAR(256), Serverproperty( 
                                      'ServerName') 
                                      ) 
                                      + ' (DISTRIBUTOR :: ' 
                                      + CONVERT(VARCHAR(10), Serverproperty( 
                                      'ProductVersion' 
                                      )) 
                                      + ')', '.)', ')') 

            INSERT INTO ##ce 
            VALUES     ('Distributor', 
                        @CONSOLEMSG) 
        END 
  END 

go 

IF ( (SELECT [value] 
      FROM   ##ce 
      WHERE  [description] = 'Continue') = 1 ) 
  BEGIN 
      DECLARE @CONSOLEMSG VARCHAR(1000) 

      SET @CONSOLEMSG = 
      '=============================================================' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SET @CONSOLEMSG = ' REPLICATION TOPOLOGY' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SET @CONSOLEMSG = 
      '=============================================================' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SET @CONSOLEMSG = 
      'SELECT THE PUBLICATION-SUBSCRIPTION PAIR FOR SCOPING THE CASE' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SET @CONSOLEMSG = 
      '=============================================================' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SET @CONSOLEMSG = ' ' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 
  END 

go 

IF ( (SELECT [value] 
      FROM   ##ce 
      WHERE  [description] = 'Continue') = 1 ) 
  BEGIN 
      DECLARE @CONSOLEMSG VARCHAR(1000) 
      DECLARE @DISTRIBUTIONDBNAME SYSNAME 
      DECLARE @CURRENTDATABASE SYSNAME 

      SELECT @DISTRIBUTIONDBNAME = NAME 
      FROM   sys.databases (nolock) 
      WHERE  is_distributor = 1 

      SELECT @CONSOLEMSG = [value] 
      FROM   ##ce 
      WHERE  [description] = 'Distributor' 

      SET @CONSOLEMSG = @CONSOLEMSG + ' (Distribution Database: ' 
                        + @DISTRIBUTIONDBNAME + ')' 

      DELETE ##ce 
      WHERE  [description] = 'Distributor' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      SELECT @CURRENTDATABASE = Db_name() 

      IF @CURRENTDATABASE <> @DISTRIBUTIONDBNAME 
        BEGIN 
            SET @CONSOLEMSG = 
            ' Context Database is not the Distribution Database. Exiting.' 

            RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

            UPDATE ##ce 
            SET    [value] = 0 
            WHERE  [description] = 'Continue' 
        END 
  END 

go 

IF ( (SELECT [value] 
      FROM   ##ce 
      WHERE  [description] = 'Continue') = 1 ) 
  BEGIN 
      DECLARE @CONSOLEMSG VARCHAR(1000) 
      DECLARE @DISTRIBUTORSERVERNAME SYSNAME 
      DECLARE @PUBLISHERNAME SYSNAME 
      DECLARE @PUBLISHERID INT 
      DECLARE @PUBLISHERNUMBER INT 
      DECLARE @PUBLICATIONAME SYSNAME 
      DECLARE @PUBLICATIONID INT 
      DECLARE @PUBLICATIONTYPE INT 
      DECLARE @PUBLICATIONDATABASE SYSNAME 
      DECLARE @ALLOW_QUEUED_TRAN INT 
      DECLARE @STMT VARCHAR(max) 
      DECLARE @NUMARTICLES INT 
      DECLARE @RESERVEDSIZE BIGINT 
      DECLARE @USEDSIZE BIGINT 
      DECLARE @INDEXSIZE BIGINT 
      DECLARE @SUBSCRIBERNAME SYSNAME 
      DECLARE @SUBSCRIPTIONDB SYSNAME 
      DECLARE @SUBSCRIPTIONTYPE INT 
      DECLARE @OPTIONS INT -- added by Tzakir 
      SET @PUBLISHERNUMBER = 0 
      SET @DISTRIBUTORSERVERNAME = CONVERT(SYSNAME, Serverproperty('ServerName') 
                                   ) 
      SET @CONSOLEMSG = ' |- PUBLISHERS' 

      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

      DECLARE publishercursor CURSOR local read_only FOR 
        SELECT DISTINCT S.NAME, 
                        PUB.publisher_id 
        FROM   sys.servers (nolock) S 
               JOIN dbo.mspublications (nolock) PUB 
                 ON S.server_id = PUB.publisher_id 

      OPEN publishercursor 

      FETCH next FROM publishercursor INTO @PUBLISHERNAME, @PUBLISHERID 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @PUBLISHERNUMBER = @PUBLISHERNUMBER + 1 
            SET @CONSOLEMSG = ' |- ' + @PUBLISHERNAME + ' (Publisher ' 
                              + CONVERT(VARCHAR(10), @PUBLISHERNUMBER) + ')' 

            RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

            SET @CONSOLEMSG = ' |- PUBLICATIONS' 

            RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

            DECLARE publicationcursor CURSOR local read_only FOR 
              --  SELECT PUBLICATION, PUBLICATION_ID, PUBLICATION_TYPE, PUBLISHER_DB, ALLOW_QUEUED_TRAN 
              SELECT publication, 
                     publication_id, 
                     publication_type, 
                     publisher_db, 
                     allow_queued_tran, 
                     options 
              FROM   dbo.mspublications (nolock) 
              WHERE  publisher_id = @PUBLISHERID 

            OPEN publicationcursor 

            FETCH next FROM publicationcursor INTO @PUBLICATIONAME, 
            @PUBLICATIONID 
            , 
            @PUBLICATIONTYPE, @PUBLICATIONDATABASE, @ALLOW_QUEUED_TRAN, @options 

            WHILE @@FETCH_STATUS = 0 
              BEGIN 
                  SET @CONSOLEMSG = ' |- ' + @PUBLICATIONAME + ' (' 
                  SET @CONSOLEMSG = @CONSOLEMSG + 'Publication ID: ' 
                                    + CONVERT(VARCHAR(10), @PUBLICATIONID) + 
                                    '; ' 

                  IF @PUBLICATIONTYPE = 0 
                    BEGIN 
                        --IF @ALLOW_QUEUED_TRAN = 0 
                        --  SET @CONSOLEMSG = @CONSOLEMSG + 'Publication type: Transactional (1-way); ' 
                        IF @ALLOW_QUEUED_TRAN = 0 
                          BEGIN 
                              IF @options = 1 
                                SET @CONSOLEMSG = 
                                @CONSOLEMSG + 'Publication type: Peer; ' 
                              ELSE 
                                SET @CONSOLEMSG = @CONSOLEMSG 
                                                  + 
                                'Publication type: Transactional (1-way); ' 
                          END 
                        ELSE 
                          SET @CONSOLEMSG = @CONSOLEMSG 
                                            + 
                          'Publication type: Transactional (2-way); ' 
                    END 
                  ELSE IF @PUBLICATIONTYPE = 1 
                    SET @CONSOLEMSG = @CONSOLEMSG 
                                      + 'Publication type: Snapshot; ' 
                  ELSE IF @PUBLICATIONTYPE = 2 
                    SET @CONSOLEMSG = @CONSOLEMSG + 'Publication type: Merge; ' 

                  SET @CONSOLEMSG = @CONSOLEMSG + 'Publication database: ' 
                                    + @PUBLICATIONDATABASE + ')' 

                  RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

                  SET @CONSOLEMSG = 'XXX' 

                  IF @PUBLICATIONTYPE < 2 
                    BEGIN 
                        SET @CONSOLEMSG = ' |- ARTICLES' 

                        RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

                        SELECT @NUMARTICLES = Count(article_id) 
                        FROM   msarticles (nolock) 
                        WHERE  publication_id = @PUBLICATIONID 
                               AND publisher_db = @PUBLICATIONDATABASE 

                        SET @CONSOLEMSG = ' |- ' + CONVERT(VARCHAR(10), 
                                          @NUMARTICLES) 
                                          + ' article(s)' 
                    END 
                  ELSE 
                    BEGIN 
                        IF @DISTRIBUTORSERVERNAME = @PUBLISHERNAME 
                          BEGIN 
                              SET @CONSOLEMSG = ' |- ARTICLES' 

                              RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

                              SET @STMT = 'SET NOCOUNT ON' + Char(13) 
                              SET @STMT = @STMT + 'DECLARE @NUMART INT' + Char( 
                                          13) 
                              SET @STMT = @STMT 
                                          + 
                              'SELECT @NUMART = COUNT(MA.OBJID) FROM ' 
                                          + @PUBLICATIONDATABASE 
                                          + 
                              '.DBO.SYSMERGEARTICLES (NOLOCK) MA JOIN ' 
                                          + @PUBLICATIONDATABASE 
                                          + 
'.DBO.SYSMERGEPUBLICATIONS (NOLOCK) MP ON MA.PUBID = MP.PUBID WHERE MP.PUBLISHER_DB = ''' 
            + @PUBLICATIONDATABASE 
            + ''' AND MP.NAME = ''' + @PUBLICATIONAME + '''' 
            + Char(13) 
    SET @STMT = @STMT 
                + 'INSERT INTO ##CE VALUES (''NUMART'', @NUMART)' 
                + Char(13) 

    EXEC (@STMT) 

    SELECT @NUMARTICLES = [value] 
    FROM   ##ce 
    WHERE  [description] = 'NUMART' 

    DELETE ##ce 
    WHERE  [description] = 'NUMART' 

    SET @CONSOLEMSG = ' |- ' + CONVERT(VARCHAR(10), @NUMARTICLES) 
                      + ' article(s)' 
END 
END 

    IF @DISTRIBUTORSERVERNAME = @PUBLISHERNAME 
      BEGIN 
          IF @PUBLICATIONTYPE < 2 
            BEGIN 
                SET @STMT = 'SET NOCOUNT ON' + Char(13) 
                SET @STMT = @STMT + 'DECLARE @Reserved BIGINT' + Char(13) 
                SET @STMT = @STMT + 'DECLARE @Used BIGINT' + Char(13) 
                SET @STMT = @STMT + 'DECLARE @Index BIGINT' + Char(13) 
                SET @STMT = @STMT 
                            + 'SELECT @Reserved = SUM([Reserved Size (KB)]),' 
                            + Char(13) 
                SET @STMT = @STMT + '@Used = SUM([Used Size (KB)]),' 
                            + Char(13) 
                SET @STMT = @STMT + '@Index = SUM([Index Size (KB)])' 
                            + Char(13) 
                SET @STMT = @STMT 
                            + 
    'FROM (SELECT SUM([PS].[Reserved_Page_Count]) * 8 AS [Reserved Size (KB)],' 
                + Char(13) 
    SET @STMT = @STMT 
                + '	SUM([PS].[Used_Page_Count]) * 8 AS [Used Size (KB)],' 
                + Char(13) 
    SET @STMT = @STMT + '	SUM(' + Char(13) 
    SET @STMT = @STMT + '	CASE' + Char(13) 
    SET @STMT = @STMT 
                + 
'	WHEN ([PS].[index_id] < 2) THEN ([PS].[in_row_data_page_count] + [PS].[lob_used_page_count] + [PS].[row_overflow_used_page_count])' 
    + Char(13) 
SET @STMT = @STMT 
        + 
'	ELSE [PS].[lob_used_page_count] + [PS].[row_overflow_used_page_count]' 
        + Char(13) 
SET @STMT = @STMT + '	END' + Char(13) 
SET @STMT = @STMT + '	) * 8 AS [Index Size (KB)]' 
        + Char(13) 
SET @STMT = @STMT + 'FROM [MSArticles] [MA] (NOLOCK)' 
        + Char(13) 
SET @STMT = @STMT + 'JOIN ' + @PUBLICATIONDATABASE 
        + '.DBO.[SysArticles] [SA] (NOLOCK)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'ON [SA].[artid] = [MA].[article_id]' 
        + Char(13) 
SET @STMT = @STMT + 'JOIN ' + @PUBLICATIONDATABASE 
        + '.[sys].[dm_db_Partition_Stats] [PS] (NOLOCK)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'ON [PS].[object_id] = [SA].[objid]' 
        + Char(13) 
SET @STMT = @STMT + 'WHERE [MA].[publisher_id] = ' 
        + CONVERT(VARCHAR(10), @PUBLISHERID) 
        + Char(13) 
SET @STMT = @STMT + 'AND [MA].[publication_id] = ' 
        + CONVERT(VARCHAR(10), @PUBLICATIONID) 
        + Char(13) 
SET @STMT = @STMT 
        + 
'GROUP BY [SA].[objid], [MA].[source_owner], [MA].[article]) A' 
        + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Reserved'', @Reserved)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Used'', @Used)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Index'', @Index)' 
        + Char(13) 

EXEC (@STMT) 

SELECT @RESERVEDSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Reserved' 

SELECT @USEDSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Used' 

SELECT @INDEXSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Index' 

--  SET @CONSOLEMSG = @CONSOLEMSG + '; Reserved Space = ' + CONVERT(VARCHAR(20), @RESERVEDSIZE) + ' KB, '
SET @CONSOLEMSG = @CONSOLEMSG + '; Reserved Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@RESERVEDSIZE, 0)) 
              + ' KB, ' 
--  SET @CONSOLEMSG = @CONSOLEMSG + 'Used Space = ' + CONVERT(VARCHAR(20), @USEDSIZE) + ' KB, '
SET @CONSOLEMSG = @CONSOLEMSG + 'Used Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@USEDSIZE, 0)) 
              + ' KB, ' 
--  SET @CONSOLEMSG = @CONSOLEMSG + 'Index Space = ' + CONVERT(VARCHAR(20), @INDEXSIZE) + ' KB'
SET @CONSOLEMSG = @CONSOLEMSG + 'Index Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@INDEXSIZE, 0)) 
              + ' KB' 

DELETE ##ce 
WHERE  [description] IN ( 'Reserved', 'Used', 'Index' ) 
END 
ELSE 
BEGIN 
  SET @STMT = 'SET NOCOUNT ON' + Char(13) 
  SET @STMT = @STMT + 'DECLARE @Reserved BIGINT' + Char(13) 
  SET @STMT = @STMT + 'DECLARE @Used BIGINT' + Char(13) 
  SET @STMT = @STMT + 'DECLARE @Index BIGINT' + Char(13) 
  SET @STMT = @STMT 
              + 'SELECT @Reserved = SUM([Reserved Size (KB)]),' 
              + Char(13) 
  SET @STMT = @STMT + '@Used = SUM([Used Size (KB)]),' 
              + Char(13) 
  SET @STMT = @STMT + '@Index = SUM([Index Size (KB)])' 
              + Char(13) 
  SET @STMT = @STMT 
              + 
'FROM (SELECT SUM([PS].[Reserved_Page_Count]) * 8 AS [Reserved Size (KB)],' 
        + Char(13) 
SET @STMT = @STMT 
        + '	SUM([PS].[Used_Page_Count]) * 8 AS [Used Size (KB)],' 
        + Char(13) 
SET @STMT = @STMT + '	SUM(' + Char(13) 
SET @STMT = @STMT + '	CASE' + Char(13) 
SET @STMT = @STMT 
        + 
'	WHEN ([PS].[index_id] < 2) THEN ([PS].[in_row_data_page_count] + [PS].[lob_used_page_count] + [PS].[row_overflow_used_page_count])' 
    + Char(13) 
SET @STMT = @STMT 
        + 
'	ELSE [PS].[lob_used_page_count] + [PS].[row_overflow_used_page_count]' 
        + Char(13) 
SET @STMT = @STMT + '	END' + Char(13) 
SET @STMT = @STMT + '	) * 8 AS [Index Size (KB)]' 
        + Char(13) 
SET @STMT = @STMT + 'FROM ' + @PUBLICATIONDATABASE 
        + '.DBO.SYSMERGEARTICLES MA (NOLOCK) JOIN ' 
        + @PUBLICATIONDATABASE 
        + '.DBO.SYSMERGEPUBLICATIONS (NOLOCK) MP ON MA.PUBID = MP.PUBID' 
        + Char(13) 
SET @STMT = @STMT + 'JOIN ' + @PUBLICATIONDATABASE 
        + 
'.[sys].[dm_db_Partition_Stats] [PS] (NOLOCK) ON [PS].[object_id] = [MA].[OBJID]' 
    + Char(13) 
SET @STMT = @STMT + 'WHERE MP.PUBLISHER_DB = ''' 
        + @PUBLICATIONDATABASE 
        + ''' AND MP.NAME = ''' + @PUBLICATIONAME 
        + ''') A' + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Reserved'', @Reserved)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Used'', @Used)' 
        + Char(13) 
SET @STMT = @STMT 
        + 'INSERT INTO ##CE VALUES (''Index'', @Index)' 
        + Char(13) 

EXEC (@STMT) 

SELECT @RESERVEDSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Reserved' 

SELECT @USEDSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Used' 

SELECT @INDEXSIZE = [value] 
FROM   ##ce 
WHERE  [description] = 'Index' 

--SET @CONSOLEMSG = @CONSOLEMSG + '; Reserved Space = ' + CONVERT(VARCHAR(20), @RESERVEDSIZE) + ' KB, '
--SET @CONSOLEMSG = @CONSOLEMSG + 'Used Space = ' + CONVERT(VARCHAR(20), @USEDSIZE) + ' KB, ' 
--SET @CONSOLEMSG = @CONSOLEMSG + 'Index Space = ' + CONVERT(VARCHAR(20), @INDEXSIZE) + ' KB' 
SET @CONSOLEMSG = @CONSOLEMSG + '; Reserved Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@RESERVEDSIZE, 0)) 
              + ' KB, ' 
SET @CONSOLEMSG = @CONSOLEMSG + 'Used Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@USEDSIZE, 0)) 
              + ' KB, ' 
SET @CONSOLEMSG = @CONSOLEMSG + 'Index Space = ' 
              + CONVERT(VARCHAR(20), Isnull(@INDEXSIZE, 0)) 
              + ' KB' 

DELETE ##ce 
WHERE  [description] IN ( 'Reserved', 'Used', 'Index' ) 
END 
END 

    IF @CONSOLEMSG <> 'XXX' 
      RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

    SET @CONSOLEMSG = ' |- SUBSCRIPTIONS' 

    RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

    IF @PUBLICATIONTYPE < 2 
      BEGIN 
          DECLARE subscriptioncursor CURSOR local read_only FOR 
            SELECT DISTINCT S.NAME, 
                            SUB.subscriber_db, 
                            SUB.subscription_type 
            FROM   sys.servers S (nolock) 
                   JOIN mssubscriptions SUB (nolock) 
                     ON S.server_id = SUB.subscriber_id 
            WHERE  SUB.publication_id = @PUBLICATIONID 
                   AND SUB.publisher_db = @PUBLICATIONDATABASE 
                   AND SUB.subscriber_id >= 0 

          OPEN subscriptioncursor 

          FETCH next FROM subscriptioncursor INTO @SUBSCRIBERNAME, 
          @SUBSCRIPTIONDB, 
          @SUBSCRIPTIONTYPE 

          WHILE @@FETCH_STATUS = 0 
            BEGIN 
                SET @CONSOLEMSG = ' |- ' + @SUBSCRIBERNAME + ' (' 
                SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Database: ' 
                                  + @SUBSCRIPTIONDB + '; ' 

                IF @SUBSCRIPTIONTYPE = 0 
                  SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Type: Push)' 
                ELSE IF @SUBSCRIPTIONTYPE = 1 
                  SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Type: Pull)' 

                RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

                FETCH next FROM subscriptioncursor INTO @SUBSCRIBERNAME, 
                @SUBSCRIPTIONDB, 
                @SUBSCRIPTIONTYPE 
            END 

          CLOSE subscriptioncursor 

          DEALLOCATE subscriptioncursor 
      END 
    ELSE 
      BEGIN 
          DECLARE subscriptioncursor CURSOR local read_only FOR 
            SELECT subscriber, 
                   subscriber_db, 
                   subscription_type 
            FROM   msmerge_subscriptions (nolock) 
            WHERE  publication_id = @PUBLICATIONID 
                   AND publisher_db = @PUBLICATIONDATABASE 

          OPEN subscriptioncursor 

          FETCH next FROM subscriptioncursor INTO @SUBSCRIBERNAME, 
          @SUBSCRIPTIONDB, 
          @SUBSCRIPTIONTYPE 

          WHILE @@FETCH_STATUS = 0 
            BEGIN 
                SET @CONSOLEMSG = ' |- ' + @SUBSCRIBERNAME + ' (' 
                SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Database: ' 
                                  + @SUBSCRIPTIONDB + '; ' 

                IF @SUBSCRIPTIONTYPE = 0 
                  SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Type: Push)' 
                ELSE IF @SUBSCRIPTIONTYPE = 1 
                  SET @CONSOLEMSG = @CONSOLEMSG + 'Subscription Type: Pull)' 

                RAISERROR (@CONSOLEMSG,10,1) WITH nowait 

                FETCH next FROM subscriptioncursor INTO @SUBSCRIBERNAME, 
                @SUBSCRIPTIONDB, 
                @SUBSCRIPTIONTYPE 
            END 

          CLOSE subscriptioncursor 

          DEALLOCATE subscriptioncursor 
      END 

    FETCH next FROM publicationcursor INTO @PUBLICATIONAME, @PUBLICATIONID, 
    @PUBLICATIONTYPE, @PUBLICATIONDATABASE, @ALLOW_QUEUED_TRAN, @OPTIONS 
END 

    CLOSE publicationcursor 

    DEALLOCATE publicationcursor 

    FETCH next FROM publishercursor INTO @PUBLISHERNAME, @PUBLISHERID 
END 

    CLOSE publishercursor 

    DEALLOCATE publishercursor 
END 

go 

DROP TABLE ##ce 

GO
